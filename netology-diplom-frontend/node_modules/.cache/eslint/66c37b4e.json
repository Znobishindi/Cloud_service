[{"C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\main.ts":"1","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\stores\\index.ts":"2","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\api\\httpClient.ts":"3","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\App.vue":"4","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\router\\index.ts":"5","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\api\\api.ts":"6","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\views\\Home.vue":"7","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\views\\Login.vue":"8","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\Navbar.vue":"9","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\Notifications.vue":"10","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\elements\\EButton.vue":"11","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\elements\\ECheckbox.vue":"12","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\elements\\EUpload.vue":"13","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\elements\\EInput.vue":"14","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\utilities\\helpers.ts":"15"},{"size":342,"mtime":1681995623320,"results":"16","hashOfConfig":"17"},{"size":2754,"mtime":1681995623601,"results":"18","hashOfConfig":"17"},{"size":1274,"mtime":1681995623371,"results":"19","hashOfConfig":"17"},{"size":706,"mtime":1681995623304,"results":"20","hashOfConfig":"17"},{"size":1386,"mtime":1681995623583,"results":"21","hashOfConfig":"17"},{"size":1620,"mtime":1681995623358,"results":"22","hashOfConfig":"17"},{"size":20735,"mtime":1681995623650,"results":"23","hashOfConfig":"17"},{"size":5326,"mtime":1681995623659,"results":"24","hashOfConfig":"17"},{"size":2025,"mtime":1681995623517,"results":"25","hashOfConfig":"17"},{"size":4197,"mtime":1681995623525,"results":"26","hashOfConfig":"17"},{"size":2699,"mtime":1681995623539,"results":"27","hashOfConfig":"17"},{"size":2365,"mtime":1681995623548,"results":"28","hashOfConfig":"17"},{"size":1595,"mtime":1681995623565,"results":"29","hashOfConfig":"17"},{"size":3222,"mtime":1681995623557,"results":"30","hashOfConfig":"17"},{"size":588,"mtime":1681995623636,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pbfka4",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\main.ts",[],[],"C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\stores\\index.ts",[],[],"C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\api\\httpClient.ts",[],[],"C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\App.vue",[],[],"C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\router\\index.ts",[],[],"C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\api\\api.ts",[],[],"C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\views\\Home.vue",["80","81","82","83","84","85","86"],[],"<template>\n    <main class=\"home\">\n        <div class=\"container\">\n            <h1 class=\"home__title\">\n                Ваши файлы\n            </h1>\n\n            <e-upload class=\"home__upload\"\n                      @update=\"uploadNewFile\" />\n\n            <table class=\"home__files files\">\n                <thead>\n                    <tr>\n                        <th class=\"files__header files__header-select\"\n                            :class=\"{\n                                'files__header-select--show': isSeveralFilesSelected\n                            }\">\n                            <e-checkbox v-model=\"allFilesSelection\"\n                                        :terminated=\"isSeveralFilesSelected\"\n                                        @change=\"selectAllFiles\" />\n                        </th>\n                        <th class=\"files__header\"\n                            @click=\"changeSort('filename')\">\n                            Название\n\n                            <img v-if=\"sortColumn === 'filename' && sortColumnReverse\" src=\"@/assets/icons/down-arrow.svg\">\n                            <img v-if=\"sortColumn === 'filename' && !sortColumnReverse\" src=\"@/assets/icons/up-arrow.svg\">\n                        </th>\n                        <th class=\"files__header\"\n                            @click=\"changeSort('editedAt')\">\n                            Дата изменения\n\n                            <img v-if=\"sortColumn === 'editedAt' && sortColumnReverse\"\n                                 src=\"@/assets/icons/down-arrow.svg\">\n                            <img v-if=\"sortColumn === 'editedAt' && !sortColumnReverse\"\n                                 src=\"@/assets/icons/up-arrow.svg\">\n                        </th>\n                        <th class=\"files__header\"\n                            @click=\"changeSort('size')\">\n                            Размер\n\n                            <img v-if=\"sortColumn === 'size' && sortColumnReverse\" src=\"@/assets/icons/down-arrow.svg\">\n                            <img v-if=\"sortColumn === 'size' && !sortColumnReverse\" src=\"@/assets/icons/up-arrow.svg\">\n                        </th>\n                        <th class=\"files__header\">\n                        </th>\n                    </tr>\n                    <tr>\n                        <th></th>\n                        <th v-if=\"isSeveralFilesSelected\"\n                            class=\"files__global-actions\"\n                            colspan=\"4\">\n                            <e-button type=\"plain\"\n                                      @click=\"selectedDownload\">\n                                Скачать выбранные\n                            </e-button>\n                            <e-button type=\"plain\"\n                                      @click=\"selectedDelete\">\n                                Удалить выбранные\n                            </e-button>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr v-for=\"(file, fileIndex) in preparedFiles\"\n                        :key=\"fileIndex\"\n                        :class=\"{\n                             'files__file--error': file.error,\n                             'files__file--selected': file.selected,\n                             'files__file--show-select': isSeveralFilesSelected\n                         }\"\n                        class=\"files__file file\">\n                        <td class=\"files__cell files__cell--select\">\n                            <e-checkbox v-model=\"file.selected\" @change=\"onFileSelect\" />\n                        </td>\n                        <td :title=\"file.filename\" class=\"files__cell\"\n                            @click=\"file.selected = !file.selected\">\n                            <div :class=\"[\n                                     `files__extension-icon--length-${file.ext.length}`\n                                 ]\"\n                                 :style=\"{\n                                    borderColor: getExtColor(file.ext),\n                                    color: getExtColor(file.ext)\n                                 }\"\n                                 class=\"files__extension-icon\">\n                                {{ file.ext }}\n                            </div>\n\n                            <span class=\"file__name\">{{ getFileNameWithoutExt(file) }}</span>\n                            <span>.{{ file.ext }}</span>\n                        </td>\n                        <td class=\"files__cell\"\n                            @click=\"file.selected = !file.selected\">\n                            <span>\n                                {{ getFormattedDate(file.editedAt) }}\n                            </span>\n                        </td>\n                        <td class=\"files__cell\"\n                            @click=\"file.selected = !file.selected\">\n                            <span>\n                                {{ getFormattedSize(file.size) }}\n                            </span>\n                        </td>\n                        <td class=\"files__cell files__cell--actions\">\n                            <e-button title=\"Изменить\"\n                                      type=\"text\"\n                                      @click=\"fileChangeName(file)\">\n                                <img src=\"@/assets/icons/edit.svg\">\n                            </e-button>\n                            <e-button title=\"Скачать\"\n                                      type=\"text\"\n                                      @click=\"fileDownload(file)\">\n                                <img src=\"@/assets/icons/download.svg\">\n                            </e-button>\n                            <e-button title=\"Удалить\"\n                                      type=\"text\"\n                                      @click=\"fileDelete(file)\">\n                                <img src=\"@/assets/icons/delete.svg\">\n                            </e-button>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </main>\n</template>\n\n<script lang=\"ts\">\n    import {computed, defineComponent, reactive, ref} from 'vue';\n    import EButton from '@/components/elements/EButton.vue';\n    import ECheckbox from '@/components/elements/ECheckbox.vue';\n    import EUpload from '@/components/elements/EUpload.vue';\n    import {useStore} from \"vuex\";\n    import {stringToHashColor} from \"@/utilities/helpers\";\n    import moment from 'moment';\n    import {uploadFile, updateFile, deleteFile, downloadFile} from \"@/api/api\";\n\n    export default defineComponent({\n        name: 'FilesHome',\n        components: {\n            EButton,\n            EUpload,\n            ECheckbox\n        },\n        setup() {\n            const store = useStore();\n            const sortColumn = ref('filename');\n            const sortColumnReverse = ref(false);\n            const files = reactive([] as any);\n            const allFilesSelection = ref(false);\n\n            const onFileSelect = () => {\n                const selectedCount = files.filter((f: any) => f.selected).length;\n\n                allFilesSelection.value = selectedCount === files.length;\n            };\n\n            const getFiles = () => {\n                store.dispatch('getFiles')\n                    .then(res => {\n                        files.length = 0;\n                        for (const file of res.data) {\n                            file.error = false;\n                            file.selected = false;\n                            file.ext = file.filename.match(/\\.\\w+$/g)[0].slice(1);\n                            files.push(file);\n                        }\n\n                        // Сбрасываем счетчик выделенных файлов\n                        onFileSelect();\n                    });\n            };\n\n            getFiles();\n\n            const uploadNewFile = (file: any) => {\n                store.dispatch('addNotification', {\n                    text: `Загрузка файла \"${file.name}\"`,\n                    status: 'loading'\n                }).then(notification => {\n                    uploadFile(file, file.name)\n                        .then(res => {\n                            setTimeout(() => {\n                                getFiles();\n                                notification.status = 'success';\n                                notification.text = `Файл \"${file.name}\" успешно загружен`;\n                            }, 2000);\n                        })\n                        .catch(res => {\n                            setTimeout(() => {\n                                notification.status = 'error';\n                                notification.text = `Не удалось загрузить файл \"${file.name}\"`;\n                            }, 2000);\n                        })\n                        .then(() => {\n                            setTimeout(() => {\n                                notification.hidden = true;\n                            }, 5000);\n                        });\n                })\n            };\n\n            const preparedFiles = computed(() => {\n                if (files.length === 0) return [];\n\n                const sortedFiles = Array.from(files).sort((fileA: any, fileB: any) => {\n                    if (typeof fileA[sortColumn.value] === 'number') {\n                        return fileA[sortColumn.value] - fileB[sortColumn.value];\n                    } else {\n                        return fileA[sortColumn.value].localeCompare(fileB[sortColumn.value]);\n                    }\n                });\n\n                if (sortColumnReverse.value) {\n                    sortedFiles.reverse();\n                }\n\n                return sortedFiles;\n            });\n\n            const getExtColor = (ext: string) => {\n                return stringToHashColor(ext);\n            };\n\n            const getFormattedDate = (timestamp: number) => {\n                return moment(timestamp).format('DD.MM.YYYY HH:mm')\n            };\n\n            const getFormattedSize = (size: number) => {\n                return `${(size / 1024 / 1024).toFixed(1)} МБ`;\n            };\n\n            const getFileNameWithoutExt = (file: any) => {\n                return file.filename.replace(new RegExp(`.${file.ext}$`), '');\n            };\n\n            const isSeveralFilesSelected = computed(() => {\n                return files.some((f: any) => f.selected);\n            });\n\n            const changeSort = (column: string) => {\n                const currentColumn = sortColumn.value;\n\n                if (column === currentColumn) {\n                    sortColumnReverse.value = !sortColumnReverse.value;\n                } else {\n                    sortColumn.value = column;\n                }\n            };\n\n            const selectAllFiles = () => {\n                files.map((f: any) => {\n                    f.selected = !!allFilesSelection.value;\n                    return f;\n                });\n            };\n\n            const fileChangeName = (file: any) => {\n                store.dispatch('addNotification', {\n                    text: `Переименование файла \"${file.filename}\"`,\n                    status: 'loading'\n                }).then(notification => {\n                    const filename = `${Math.floor(Math.random() * 1000)}.${file.ext}`;\n\n                    updateFile(file.filename, {filename})\n                        .then(res => {\n                            setTimeout(() => {\n                                file.filename = filename;\n\n                                notification.status = 'success';\n                                notification.text = `Файл \"${file.filename}\" успешно переименован`;\n                            }, 2000);\n                        })\n                        .catch(res => {\n                            setTimeout(() => {\n                                file.error = true;\n                                notification.status = 'error';\n                                notification.text = `Не удалось переименовать файл \"${file.filename}\"`;\n                            }, 2000);\n                        })\n                        .then(() => {\n                            setTimeout(() => {\n                                file.error = false;\n                                notification.hidden = true;\n                            }, 5000);\n                        });\n                })\n            };\n\n            const fileDownload = (file: any) => {\n                store.dispatch('addNotification', {\n                    text: `Скачивание файла \"${file.filename}\"`,\n                    status: 'loading'\n                }).then(notification => {\n                    downloadFile(file.filename)\n                        .then((res: any) => {\n                            const url = window.URL.createObjectURL(new Blob([res.data]));\n                            const link = document.createElement('a');\n                            link.href = url;\n                            link.setAttribute('download', file.filename);\n                            document.body.appendChild(link);\n                            link.click();\n\n                            setTimeout(() => {\n                                notification.status = 'success';\n                                notification.text = `Файл \"${file.filename}\" успешно скачан`;\n                            }, 2000);\n                        })\n                        .catch(res => {\n                            setTimeout(() => {\n                                file.error = true;\n                                notification.status = 'error';\n                                notification.text = `Не удалось скачать файл \"${file.filename}\"`;\n                            }, 2000);\n                        })\n                        .then(() => {\n                            setTimeout(() => {\n                                file.error = false;\n                                notification.hidden = true;\n                            }, 5000);\n                        });\n                })\n            };\n\n            const fileDelete = (file: any) => {\n                store.dispatch('addNotification', {\n                    text: `Удаление файла \"${file.filename}\"`,\n                    status: 'loading'\n                }).then(notification => {\n                    deleteFile(file.filename)\n                        .then(res => {\n                            setTimeout(() => {\n                                getFiles();\n\n                                notification.status = 'success';\n                                notification.text = `Файл \"${file.filename}\" успешно удалён`;\n                            }, 2000);\n                        })\n                        .catch(res => {\n                            setTimeout(() => {\n                                file.error = true;\n                                notification.status = 'error';\n                                notification.text = `Не удалось удалить файл \"${file.filename}\"`;\n                            }, 2000);\n                        })\n                        .then(() => {\n                            setTimeout(() => {\n                                file.error = false;\n                                notification.hidden = true;\n                            }, 5000);\n                        });\n                })\n            };\n\n            const selectedDownload = () => {\n                const selectedFiles = files.filter((f: any) => f.selected);\n\n                selectedFiles.forEach((f: any) => {\n                    fileDownload(f);\n                });\n            };\n\n            const selectedDelete = () => {\n                const selectedFiles = files.filter((f: any) => f.selected);\n\n                selectedFiles.forEach((f: any) => {\n                    fileDelete(f);\n                });\n            };\n\n            return {\n                files,\n                allFilesSelection,\n                preparedFiles,\n                isSeveralFilesSelected,\n                sortColumn,\n                sortColumnReverse,\n                uploadNewFile,\n                getExtColor,\n                getFormattedDate,\n                getFormattedSize,\n                getFileNameWithoutExt,\n                selectAllFiles,\n                onFileSelect,\n                changeSort,\n                fileChangeName,\n                fileDownload,\n                fileDelete,\n                selectedDownload,\n                selectedDelete\n            }\n        },\n    });\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"@/styles/_variables.scss\";\n\n    .container {\n        margin: 0 auto;\n        width: 1170px;\n        max-width: calc(100% - 40px);\n    }\n\n    .home {\n        padding-top: 64px;\n\n        &__title {\n            font-size: 36px;\n        }\n\n        &__upload {\n            margin-top: 30px;\n        }\n\n        &__files {\n            border-spacing: 0;\n            margin-top: 50px;\n            width: 100%;\n            text-align: left;\n            box-sizing: border-box;\n\n            .files {\n                &__header {\n                    padding: 18px 16px;\n                    border-bottom: 2px solid #C4C4C4;\n                    font-size: 20px;\n                    cursor: pointer;\n\n                    img {\n                        margin-left: 10px;\n                    }\n\n                    &-select {\n                        border-bottom-color: transparent;\n                        width: 30px;\n                        opacity: 0;\n\n                        &:hover {\n                            opacity: 1;\n                        }\n\n                        &--show {\n                            opacity: 1;\n                        }\n                    }\n                }\n\n                &__global-actions {\n                    padding: 22px 0 40px;\n\n                    .e-button:not(:first-child) {\n                        margin-left: 16px;\n                    }\n                }\n\n                &__file {\n                    &:hover .files__cell:not(.files__cell--select) {\n                        background-color: rgba(#9B9B9B, .14);\n                    }\n\n                    &:hover .files__cell.files__cell--select,\n                    &--show-select .files__cell.files__cell--select {\n                        opacity: 1;\n                    }\n\n                    &--error {\n                        color: $color-red;\n                    }\n\n                    &--selected .files__cell:not(.files__cell--select) {\n                        background-color: $color-light-blue;\n                    }\n\n                    .file {\n                        &__name {\n                            display: inline-block;\n                            max-width: 400px;\n                            overflow: hidden;\n                            white-space: nowrap;\n                            text-overflow: ellipsis;\n                        }\n                    }\n                }\n\n                &__cell {\n                    padding: 17px 16px;\n                    font-size: 24px;\n                    transition: .05s ease;\n\n                    span {\n                        vertical-align: middle;\n                    }\n\n                    &--select {\n                        opacity: 0;\n                        transition: .05s ease;\n                    }\n\n                    &--actions {\n                        button:not(:first-child) {\n                            margin-left: 28px;\n                        }\n                    }\n                }\n\n                &__extension-icon {\n                    margin-right: 20px;\n                    border: 2px solid #4BD0A0;\n                    display: inline-flex;\n                    justify-content: center;\n                    align-items: center;\n                    width: 40px;\n                    height: 40px;\n                    color: #4bd0a0;\n                    border-radius: 5px;\n                    font-size: 8px;\n                    font-weight: 700;\n                    text-align: center;\n                    text-transform: uppercase;\n\n                    &--length-1,\n                    &--length-2,\n                    &--length-3 {\n                        font-size: 14px;\n                    }\n\n                    &--length-4 {\n                        font-size: 10px;\n                    }\n                }\n            }\n        }\n    }\n</style>\n","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\views\\Login.vue",["87"],[],"<template>\n    <main class=\"login\">\n        <h1 class=\"login__title\">\n            Облачное хранилище\n        </h1>\n        <p class=\"login__subtitle\">\n            Введите свою почту и пароль, чтобы начать\n            работу в облачном хранилище\n        </p>\n\n        <form class=\"login__form\"\n              @submit.prevent>\n            <e-input v-model=\"form.email\"\n                     :errors=\"formErrors.email\"\n                     class=\"123\"\n                     placeholder=\"Введите вашу почту\"\n                     size=\"large\"\n                     @blur=\"validateForm('email')\" />\n            <e-input v-model=\"form.password\"\n                     :errors=\"formErrors.password\"\n                     placeholder=\"Введите ваш пароль\"\n                     size=\"large\"\n                     @blur=\"validateForm('password')\" />\n\n            <e-button :disabled=\"formHasLocalError\"\n                      class=\"form__submit\"\n                      size=\"large\"\n                      @click=\"submitForm\">\n                Войти\n            </e-button>\n        </form>\n    </main>\n</template>\n\n<script lang=\"ts\">\n    import {computed, defineComponent, reactive} from 'vue';\n    import EInput from '@/components/elements/EInput.vue';\n    import EButton from \"@/components/elements/EButton.vue\";\n    import {useStore} from \"vuex\";\n    import {useRouter} from 'vue-router';\n\n\n    export default defineComponent({\n        name: 'LoginComponent',\n        components: {\n            EInput,\n            EButton\n        },\n        setup() {\n            const store = useStore();\n            const router = useRouter();\n\n            const form = reactive({\n                email: '',\n                password: ''\n            });\n\n            const formErrors = reactive({\n                email: [] as string[],\n                password: [] as string[]\n            });\n\n            const formHasLocalError = computed(() => {\n                return (\n                    formErrors.email[0] === 'Необходимо ввести почту'\n                    || formErrors.password[0] === 'Необходимо ввести пароль'\n                );\n            });\n\n            const validateForm = (field = null) => {\n                let errorHandled = false;\n\n                if ((!field || field === 'email')) {\n                    if (form.email.length === 0) {\n                        formErrors.email = ['Необходимо ввести почту'];\n                        errorHandled = true;\n                    } else {\n                        formErrors.email = [];\n                    }\n                }\n\n                if ((!field || field === 'password')) {\n                    if (form.password.length === 0) {\n                        formErrors.password = ['Необходимо ввести пароль'];\n                        errorHandled = true;\n                    } else {\n                        formErrors.password = [];\n                    }\n                }\n\n                return !errorHandled;\n            };\n\n            const submitForm = () => {\n                if (!validateForm()) return;\n\n                store.dispatch('login', {\n                    email: form.email,\n                    password: form.password\n                }).then(res => {\n                    // Очищаем ошибки\n                    formErrors.email = [];\n                    formErrors.password = [];\n\n                    // Переходим на главную\n                    router.push({\n                        'name': 'Home'\n                    });\n                }).catch(res => {\n                    // Ошибка при авторизации\n                    if (res.data.email.length > 0) {\n                        formErrors.email = res.data.email;\n                    } else {\n                        formErrors.email = [];\n                    }\n\n                    if (res.data.password.length > 0) {\n                        formErrors.password = res.data.password;\n                    } else {\n                        formErrors.password = [];\n                    }\n                });\n            }\n\n            return {\n                form,\n                formErrors,\n                formHasLocalError,\n                validateForm,\n                submitForm\n            };\n        },\n    });\n</script>\n\n<style lang=\"scss\" scoped>\n    .login {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n\n        &__title {\n            margin-bottom: 58px;\n            font-size: 64px;\n            text-align: center;\n        }\n\n        &__subtitle {\n            margin-bottom: 60px;\n            max-width: 510px;\n            font-size: 24px;\n            font-weight: 300;\n            text-align: center;\n        }\n\n        &__form {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            width: 530px;\n\n            .form {\n                &__submit {\n                    margin-top: 60px;\n                    min-width: 175px;\n                }\n            }\n        }\n    }\n\n    .e-input + .e-input {\n        margin-top: 26px;\n    }\n</style>\n","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\Navbar.vue",[],[],"C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\Notifications.vue",[],[],"C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\elements\\EButton.vue",[],[],"C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\elements\\ECheckbox.vue",["88"],[],"<template>\n    <label :class=\"{\n            'e-checkbox--checked': isChecked,\n            'e-checkbox--terminated': isTerminated\n         }\"\n         class=\"e-checkbox\">\n        <input :value=\"modelValue\"\n               class=\"e-checkbox__input\"\n               type=\"checkbox\"\n               @change=\"inputChanged\">\n    </label>\n</template>\n\n<script>\n    import {computed, defineComponent, watch} from 'vue';\n\n    export default defineComponent({\n        name: 'ECheckbox',\n        props: {\n            modelValue: {},\n            terminated: {\n                type: Boolean,\n                default: false,\n            }\n        },\n        setup(props, {emit}) {\n            // watch(() => props.modelValue, (val) => {\n            //     console.log(val);\n            // });\n\n            const isChecked = computed(() => {\n                return props.modelValue;\n            });\n\n            const isTerminated = computed(() => {\n                return props.terminated;\n            });\n\n            const inputChanged = (e) => {\n                // Проверяем, действительно ли произошло изменение. Если нет - форсируем изменения\n                if (props.modelValue === e.target.checked) {\n                    emit('update:modelValue', !e.target.checked)\n                } else {\n                    emit('update:modelValue', e.target.checked)\n                }\n            };\n\n            return {\n                isTerminated,\n                isChecked,\n                inputChanged\n            };\n        },\n    });\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"@/styles/_variables.scss\";\n\n    .e-checkbox {\n        border: 3px solid #c4c4c4;\n        display: block;\n        width: 30px;\n        height: 30px;\n        background-color: transparent;\n        border-radius: 5px;\n        box-sizing: border-box;\n        cursor: pointer;\n\n        &--checked {\n            border-color: $color-primary;\n            background-color: $color-primary;\n            background-image: url('../../assets/icons/done-tick.svg');\n            background-repeat: no-repeat;\n            background-position: 50%;\n            background-size: 80%;\n        }\n\n        &--terminated {\n            border-color: $color-primary;\n        }\n\n        &__input {\n            display: none;\n        }\n    }\n</style>\n","C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\elements\\EUpload.vue",[],[],"C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\elements\\EInput.vue",[],[],"C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\utilities\\helpers.ts",[],[],{"ruleId":"89","severity":1,"message":"90","line":182,"column":31,"nodeType":"91","messageId":"92","endLine":182,"endColumn":34},{"ruleId":"89","severity":1,"message":"90","line":189,"column":32,"nodeType":"91","messageId":"92","endLine":189,"endColumn":35},{"ruleId":"89","severity":1,"message":"90","line":266,"column":31,"nodeType":"91","messageId":"92","endLine":266,"endColumn":34},{"ruleId":"89","severity":1,"message":"90","line":274,"column":32,"nodeType":"91","messageId":"92","endLine":274,"endColumn":35},{"ruleId":"89","severity":1,"message":"90","line":309,"column":32,"nodeType":"91","messageId":"92","endLine":309,"endColumn":35},{"ruleId":"89","severity":1,"message":"90","line":331,"column":31,"nodeType":"91","messageId":"92","endLine":331,"endColumn":34},{"ruleId":"89","severity":1,"message":"90","line":339,"column":32,"nodeType":"91","messageId":"92","endLine":339,"endColumn":35},{"ruleId":"89","severity":1,"message":"90","line":100,"column":25,"nodeType":"91","messageId":"92","endLine":100,"endColumn":28},{"ruleId":"89","severity":1,"message":"93","line":15,"column":40,"nodeType":"91","messageId":"92","endLine":15,"endColumn":45},"@typescript-eslint/no-unused-vars","'res' is defined but never used.","Identifier","unusedVar","'watch' is defined but never used."]