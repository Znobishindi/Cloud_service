{"ast":null,"code":"import { computed, defineComponent } from 'vue';\nexport default defineComponent({\n  name: 'EInput',\n  emits: ['blur'],\n  props: {\n    modelValue: String,\n    type: {\n      type: String,\n      default: 'default',\n      validate(v) {\n        return ['default'].includes(v);\n      }\n    },\n    size: {\n      type: String,\n      default: 'medium',\n      validate(v) {\n        return ['medium', 'large'].includes(v);\n      }\n    },\n    errors: {\n      type: Array\n    },\n    placeholder: String\n  },\n  setup(props, {\n    emit\n  }) {\n    const typeClass = computed(() => {\n      return `e-input--type-${props.type}`;\n    });\n    const sizeClass = computed(() => {\n      return `e-input--size-${props.size}`;\n    });\n    const hasError = computed(() => {\n      return props.errors.length > 0;\n    });\n    const modelChanged = e => {\n      const val = e.target.value;\n      emit('update:modelValue', val);\n    };\n    return {\n      typeClass,\n      sizeClass,\n      hasError,\n      modelChanged\n    };\n  }\n});","map":{"version":3,"names":["computed","defineComponent","name","emits","props","modelValue","String","type","default","validate","v","includes","size","errors","Array","placeholder","setup","emit","typeClass","sizeClass","hasError","length","modelChanged","e","val","target","value"],"sources":["C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\elements\\EInput.vue"],"sourcesContent":["<template>\n    <div :class=\"[\n            typeClass,\n            sizeClass,\n            {\n                'e-input--error': hasError\n            }\n        ]\"\n         class=\"e-input\">\n        <input :placeholder=\"placeholder\"\n               class=\"e-input__input\"\n               @blur=\"$emit('blur')\"\n               @change=\"modelChanged\"\n               @input=\"modelChanged\">\n        <p v-for=\"(error, index) in errors\"\n           class=\"e-input__error\"\n           v-bind:key=\"index\">\n            {{ error }}\n        </p>\n    </div>\n</template>\n\n<script>\n    import {computed, defineComponent} from 'vue';\n\n    export default defineComponent({\n        name: 'EInput',\n        emits: ['blur'],\n        props: {\n            modelValue: String,\n            type: {\n                type: String,\n                default: 'default',\n                validate(v) {\n                    return ['default'].includes(v);\n                },\n            },\n            size: {\n                type: String,\n                default: 'medium',\n                validate(v) {\n                    return ['medium', 'large'].includes(v);\n                },\n            },\n            errors: {\n                type: Array,\n            },\n            placeholder: String,\n        },\n        setup(props, {emit}) {\n            const typeClass = computed(() => {\n                return `e-input--type-${props.type}`;\n            });\n\n            const sizeClass = computed(() => {\n                return `e-input--size-${props.size}`;\n            });\n\n            const hasError = computed(() => {\n                return props.errors.length > 0;\n            });\n\n            const modelChanged = (e) => {\n                const val = e.target.value;\n                emit('update:modelValue', val);\n            };\n\n            return {\n                typeClass,\n                sizeClass,\n                hasError,\n                modelChanged,\n            };\n        },\n    });\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"@/styles/_variables.scss\";\n\n    .e-input {\n        width: 100%;\n\n        &--size-large {\n            .e-input__input {\n                height: 70px;\n                font-size: 20px;\n            }\n        }\n\n        &--error {\n            .e-input__input {\n                border-color: $color-red;\n                color: $color-red;\n                background-color: #FFCDCD;\n\n                &::placeholder {\n                    color: rgba($color-red, .5);\n                }\n            }\n        }\n\n        &__input {\n            padding-left: 30px;\n            border: 1px solid #CECECE;\n            width: 100%;\n            height: 50px;\n            background-color: #E0E0E0;\n            border-radius: 8px;\n            font-size: 16px;\n            outline: none;\n            box-sizing: border-box;\n\n            &:focus {\n                border-color: #808080;\n            }\n\n            &::placeholder {\n                color: #b0b0b0;\n            }\n        }\n\n        &__error {\n            padding-top: 13px;\n            padding-left: 30px;\n            color: $color-red;\n            font-size: 18px;\n        }\n\n        &__error + .e-input__error {\n            padding-top: 4px;\n        }\n    }\n</style>\n"],"mappings":"AAuBI,SAAQA,QAAQ,EAAEC,eAAe,QAAO,KAAK;AAE7C,eAAeA,eAAe,CAAC;EAC3BC,IAAI,EAAE,QAAQ;EACdC,KAAK,EAAE,CAAC,MAAM,CAAC;EACfC,KAAK,EAAE;IACHC,UAAU,EAAEC,MAAM;IAClBC,IAAI,EAAE;MACFA,IAAI,EAAED,MAAM;MACZE,OAAO,EAAE,SAAS;MAClBC,QAAQA,CAACC,CAAC,EAAE;QACR,OAAO,CAAC,SAAS,CAAC,CAACC,QAAQ,CAACD,CAAC,CAAC;MAClC;IACJ,CAAC;IACDE,IAAI,EAAE;MACFL,IAAI,EAAED,MAAM;MACZE,OAAO,EAAE,QAAQ;MACjBC,QAAQA,CAACC,CAAC,EAAE;QACR,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAACC,QAAQ,CAACD,CAAC,CAAC;MAC1C;IACJ,CAAC;IACDG,MAAM,EAAE;MACJN,IAAI,EAAEO;IACV,CAAC;IACDC,WAAW,EAAET;EACjB,CAAC;EACDU,KAAKA,CAACZ,KAAK,EAAE;IAACa;EAAI,CAAC,EAAE;IACjB,MAAMC,SAAQ,GAAIlB,QAAQ,CAAC,MAAM;MAC7B,OAAQ,iBAAgBI,KAAK,CAACG,IAAK,EAAC;IACxC,CAAC,CAAC;IAEF,MAAMY,SAAQ,GAAInB,QAAQ,CAAC,MAAM;MAC7B,OAAQ,iBAAgBI,KAAK,CAACQ,IAAK,EAAC;IACxC,CAAC,CAAC;IAEF,MAAMQ,QAAO,GAAIpB,QAAQ,CAAC,MAAM;MAC5B,OAAOI,KAAK,CAACS,MAAM,CAACQ,MAAK,GAAI,CAAC;IAClC,CAAC,CAAC;IAEF,MAAMC,YAAW,GAAKC,CAAC,IAAK;MACxB,MAAMC,GAAE,GAAID,CAAC,CAACE,MAAM,CAACC,KAAK;MAC1BT,IAAI,CAAC,mBAAmB,EAAEO,GAAG,CAAC;IAClC,CAAC;IAED,OAAO;MACHN,SAAS;MACTC,SAAS;MACTC,QAAQ;MACRE;IACJ,CAAC;EACL;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}