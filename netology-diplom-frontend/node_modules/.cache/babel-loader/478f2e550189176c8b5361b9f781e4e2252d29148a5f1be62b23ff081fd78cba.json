{"ast":null,"code":"import { createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b54193c0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"label\", {\n    class: _normalizeClass([{\n      'e-checkbox--checked': _ctx.isChecked,\n      'e-checkbox--terminated': _ctx.isTerminated\n    }, \"e-checkbox\"])\n  }, [_createElementVNode(\"input\", {\n    value: _ctx.modelValue,\n    class: \"e-checkbox__input\",\n    type: \"checkbox\",\n    onChange: _cache[0] || (_cache[0] = (...args) => _ctx.inputChanged && _ctx.inputChanged(...args))\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_1)], 2 /* CLASS */);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","_ctx","isChecked","isTerminated","_createElementVNode","value","modelValue","type","onChange","_cache","args","inputChanged"],"sources":["C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\elements\\ECheckbox.vue"],"sourcesContent":["<template>\n    <label :class=\"{\n            'e-checkbox--checked': isChecked,\n            'e-checkbox--terminated': isTerminated\n         }\"\n         class=\"e-checkbox\">\n        <input :value=\"modelValue\"\n               class=\"e-checkbox__input\"\n               type=\"checkbox\"\n               @change=\"inputChanged\">\n    </label>\n</template>\n\n<script>\n    import {computed, defineComponent, watch} from 'vue';\n\n    export default defineComponent({\n        name: 'ECheckbox',\n        props: {\n            modelValue: {},\n            terminated: {\n                type: Boolean,\n                default: false,\n            }\n        },\n        setup(props, {emit}) {\n            // watch(() => props.modelValue, (val) => {\n            //     console.log(val);\n            // });\n\n            const isChecked = computed(() => {\n                return props.modelValue;\n            });\n\n            const isTerminated = computed(() => {\n                return props.terminated;\n            });\n\n            const inputChanged = (e) => {\n                // Проверяем, действительно ли произошло изменение. Если нет - форсируем изменения\n                if (props.modelValue === e.target.checked) {\n                    emit('update:modelValue', !e.target.checked)\n                } else {\n                    emit('update:modelValue', e.target.checked)\n                }\n            };\n\n            return {\n                isTerminated,\n                isChecked,\n                inputChanged\n            };\n        },\n    });\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"@/styles/_variables.scss\";\n\n    .e-checkbox {\n        border: 3px solid #c4c4c4;\n        display: block;\n        width: 30px;\n        height: 30px;\n        background-color: transparent;\n        border-radius: 5px;\n        box-sizing: border-box;\n        cursor: pointer;\n\n        &--checked {\n            border-color: $color-primary;\n            background-color: $color-primary;\n            background-image: url('../../assets/icons/done-tick.svg');\n            background-repeat: no-repeat;\n            background-position: 50%;\n            background-size: 80%;\n        }\n\n        &--terminated {\n            border-color: $color-primary;\n        }\n\n        &__input {\n            display: none;\n        }\n    }\n</style>\n"],"mappings":";;;;uBACIA,mBAAA,CASQ;IATAC,KAAK,EAAAC,eAAA;6BAAuCC,IAAA,CAAAC,SAAS;gCAAwCD,IAAA,CAAAE;OAI1F,YAAY;MACnBC,mBAAA,CAG8B;IAHtBC,KAAK,EAAEJ,IAAA,CAAAK,UAAU;IAClBP,KAAK,EAAC,mBAAmB;IACzBQ,IAAI,EAAC,UAAU;IACdC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAET,IAAA,CAAAU,YAAA,IAAAV,IAAA,CAAAU,YAAA,IAAAD,IAAA,CAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}