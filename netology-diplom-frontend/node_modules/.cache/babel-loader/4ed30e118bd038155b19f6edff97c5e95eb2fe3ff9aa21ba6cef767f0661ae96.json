{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-8851e2c4\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"placeholder\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([[_ctx.typeClass, _ctx.sizeClass, {\n      'e-input--error': _ctx.hasError\n    }], \"e-input\"])\n  }, [_createElementVNode(\"input\", {\n    placeholder: _ctx.placeholder,\n    class: \"e-input__input\",\n    onBlur: _cache[0] || (_cache[0] = $event => _ctx.$emit('blur')),\n    onChange: _cache[1] || (_cache[1] = (...args) => _ctx.modelChanged && _ctx.modelChanged(...args)),\n    onInput: _cache[2] || (_cache[2] = (...args) => _ctx.modelChanged && _ctx.modelChanged(...args))\n  }, null, 40, _hoisted_1), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.errors, (error, index) => {\n    return _openBlock(), _createElementBlock(\"p\", {\n      class: \"e-input__error\",\n      key: index\n    }, _toDisplayString(error), 1);\n  }), 128))], 2);\n}","map":{"version":3,"names":["_createElementBlock","class","_normalizeClass","_ctx","typeClass","sizeClass","hasError","_createElementVNode","placeholder","onBlur","_cache","$event","$emit","onChange","args","modelChanged","onInput","_Fragment","_renderList","errors","error","index","key"],"sources":["C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\elements\\EInput.vue"],"sourcesContent":["<template>\n    <div :class=\"[\n            typeClass,\n            sizeClass,\n            {\n                'e-input--error': hasError\n            }\n        ]\"\n         class=\"e-input\">\n        <input :placeholder=\"placeholder\"\n               class=\"e-input__input\"\n               @blur=\"$emit('blur')\"\n               @change=\"modelChanged\"\n               @input=\"modelChanged\">\n        <p v-for=\"(error, index) in errors\"\n           class=\"e-input__error\"\n           v-bind:key=\"index\">\n            {{ error }}\n        </p>\n    </div>\n</template>\n\n<script>\n    import {computed, defineComponent} from 'vue';\n\n    export default defineComponent({\n        name: 'EInput',\n        emits: ['blur'],\n        props: {\n            modelValue: String,\n            type: {\n                type: String,\n                default: 'default',\n                validate(v) {\n                    return ['default'].includes(v);\n                },\n            },\n            size: {\n                type: String,\n                default: 'medium',\n                validate(v) {\n                    return ['medium', 'large'].includes(v);\n                },\n            },\n            errors: {\n                type: Array,\n            },\n            placeholder: String,\n        },\n        setup(props, {emit}) {\n            const typeClass = computed(() => {\n                return `e-input--type-${props.type}`;\n            });\n\n            const sizeClass = computed(() => {\n                return `e-input--size-${props.size}`;\n            });\n\n            const hasError = computed(() => {\n                return props.errors.length > 0;\n            });\n\n            const modelChanged = (e) => {\n                const val = e.target.value;\n                emit('update:modelValue', val);\n            };\n\n            return {\n                typeClass,\n                sizeClass,\n                hasError,\n                modelChanged,\n            };\n        },\n    });\n</script>\n\n<style lang=\"scss\" scoped>\n    @import \"@/styles/_variables.scss\";\n\n    .e-input {\n        width: 100%;\n\n        &--size-large {\n            .e-input__input {\n                height: 70px;\n                font-size: 20px;\n            }\n        }\n\n        &--error {\n            .e-input__input {\n                border-color: $color-red;\n                color: $color-red;\n                background-color: #FFCDCD;\n\n                &::placeholder {\n                    color: rgba($color-red, .5);\n                }\n            }\n        }\n\n        &__input {\n            padding-left: 30px;\n            border: 1px solid #CECECE;\n            width: 100%;\n            height: 50px;\n            background-color: #E0E0E0;\n            border-radius: 8px;\n            font-size: 16px;\n            outline: none;\n            box-sizing: border-box;\n\n            &:focus {\n                border-color: #808080;\n            }\n\n            &::placeholder {\n                color: #b0b0b0;\n            }\n        }\n\n        &__error {\n            padding-top: 13px;\n            padding-left: 30px;\n            color: $color-red;\n            font-size: 18px;\n        }\n\n        &__error + .e-input__error {\n            padding-top: 4px;\n        }\n    }\n</style>\n"],"mappings":";;;;uBACIA,mBAAA,CAkBM;IAlBAC,KAAK,EAAAC,eAAA,GAAgBC,IAAA,CAAAC,SAAS,EAAcD,IAAA,CAAAE,SAAS,E;wBAAkDF,IAAA,CAAAG;QAOlG,SAAS;MAChBC,mBAAA,CAI6B;IAJrBC,WAAW,EAAEL,IAAA,CAAAK,WAAW;IACzBP,KAAK,EAAC,gBAAgB;IACrBQ,MAAI,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAER,IAAA,CAAAS,KAAK;IACXC,QAAM,EAAAH,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEX,IAAA,CAAAY,YAAA,IAAAZ,IAAA,CAAAY,YAAA,IAAAD,IAAA,CAAY;IACpBE,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAI,IAAA,KAAEX,IAAA,CAAAY,YAAA,IAAAZ,IAAA,CAAAY,YAAA,IAAAD,IAAA,CAAY;+CAC3Bd,mBAAA,CAIIiB,SAAA,QAAAC,WAAA,CAJwBf,IAAA,CAAAgB,MAAM,GAAvBC,KAAK,EAAEC,KAAK;yBAAvBrB,mBAAA,CAII;MAHDC,KAAK,EAAC,gBAAgB;MACfqB,GAAG,EAAED;wBACRD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}