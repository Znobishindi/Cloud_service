{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5ece98d0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"e-upload\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_EButton = _resolveComponent(\"EButton\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"input\", {\n    ref: \"inputRef\",\n    class: \"e-upload__input\",\n    name: \"file\",\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = (...args) => _ctx.handleChange && _ctx.handleChange(...args))\n  }, null, 544), _createVNode(_component_EButton, {\n    onClick: _ctx.addFile\n  }, {\n    default: _withCtx(() => [_createTextVNode(\" Добавить \")]),\n    _: 1\n  }, 8, [\"onClick\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","ref","name","type","onChange","_cache","args","_ctx","handleChange","_createVNode","_component_EButton","onClick","addFile"],"sources":["C:\\Users\\Денис\\IdeaProjects\\Diplom\\netology-diplom-frontend\\src\\components\\elements\\EUpload.vue"],"sourcesContent":["<template>\n    <div class=\"e-upload\">\n        <input ref=\"inputRef\"\n               class=\"e-upload__input\"\n               name='file'\n               type=\"file\"\n               @change=\"handleChange\">\n\n        <EButton @click=\"addFile\">\n            Добавить\n        </EButton>\n    </div>\n</template>\n\n<script>\n    import {defineComponent, ref} from 'vue';\n    import EButton from \"@/components/elements/EButton\";\n\n    export default defineComponent({\n        name: \"EUpload\",\n        emits: ['update'],\n        components: {\n            EButton\n        },\n        setup(props, {emit}) {\n            const inputRef = ref(null);\n\n            const handleChange = (e) => {\n                const files = [];\n\n                if (e.target.files) {\n                    // Ищем файлы от события добавления input[type=\"file\"]\n                    for (const file of e.target.files) {\n                        files.push(file);\n                    }\n                }\n\n                // Если никакие файлы не найдены\n                if (!files) return;\n\n                const file = files[0];\n\n                emit('update', file);\n            };\n\n            const addFile = () => {\n                inputRef.value.value = null;\n                inputRef.value.click();\n            };\n\n            return {\n                inputRef,\n                handleChange,\n                addFile\n            };\n        },\n    });\n</script>\n\n<style lang=\"scss\" scoped>\n    .e-upload {\n        &__input {\n            display: none;\n        }\n    }\n</style>\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAU;;;uBAArBC,mBAAA,CAUM,OAVNC,UAUM,GATFC,mBAAA,CAI8B;IAJvBC,GAAG,EAAC,UAAU;IACdJ,KAAK,EAAC,iBAAiB;IACvBK,IAAI,EAAC,MAAM;IACXC,IAAI,EAAC,MAAM;IACVC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,IAAA,CAAAC,YAAA,IAAAD,IAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;iBAE5BG,YAAA,CAEUC,kBAAA;IAFAC,OAAK,EAAEJ,IAAA,CAAAK;EAAO;sBAAE,MAE1B,C,iBAF0B,YAE1B,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}